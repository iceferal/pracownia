/*
 * This file is generated by jOOQ.
*/
package Galaktyka2.tables.records;


import Galaktyka2.tables.Uklad;
import Galaktyka2.tables.interfaces.IUklad;

import javax.annotation.Generated;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UkladRecord extends TableRecordImpl<UkladRecord> implements Record2<String, Integer>, IUklad {

    private static final long serialVersionUID = -317963152;

    /**
     * Setter for <code>public.uklad.nazwa</code>.
     */
    @Override
    public UkladRecord setNazwa(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.uklad.nazwa</code>.
     */
    @Size(max = 100)
    @Override
    public String getNazwa() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.uklad.ilosc_planet</code>.
     */
    @Override
    public UkladRecord setIloscPlanet(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.uklad.ilosc_planet</code>.
     */
    @Override
    public Integer getIloscPlanet() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Uklad.UKLAD.NAZWA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Uklad.UKLAD.ILOSC_PLANET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getNazwa();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getIloscPlanet();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UkladRecord value1(String value) {
        setNazwa(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UkladRecord value2(Integer value) {
        setIloscPlanet(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UkladRecord values(String value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IUklad from) {
        setNazwa(from.getNazwa());
        setIloscPlanet(from.getIloscPlanet());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IUklad> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UkladRecord
     */
    public UkladRecord() {
        super(Uklad.UKLAD);
    }

    /**
     * Create a detached, initialised UkladRecord
     */
    public UkladRecord(String nazwa, Integer iloscPlanet) {
        super(Uklad.UKLAD);

        set(0, nazwa);
        set(1, iloscPlanet);
    }
}
