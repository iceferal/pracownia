/*
 * This file is generated by jOOQ.
*/
package Galaktyka2.tables.records;


import Galaktyka2.tables.Planeta;
import Galaktyka2.tables.interfaces.IPlaneta;

import javax.annotation.Generated;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanetaRecord extends TableRecordImpl<PlanetaRecord> implements Record4<String, String, String, String>, IPlaneta {

    private static final long serialVersionUID = -112549017;

    /**
     * Setter for <code>public.planeta.nazwa</code>.
     */
    @Override
    public PlanetaRecord setNazwa(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.planeta.nazwa</code>.
     */
    @Size(max = 100)
    @Override
    public String getNazwa() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.planeta.uklad</code>.
     */
    @Override
    public PlanetaRecord setUklad(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.planeta.uklad</code>.
     */
    @Size(max = 100)
    @Override
    public String getUklad() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.planeta.masa</code>.
     */
    @Override
    public PlanetaRecord setMasa(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.planeta.masa</code>.
     */
    @Size(max = 100)
    @Override
    public String getMasa() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.planeta.okres_orbitalny</code>.
     */
    @Override
    public PlanetaRecord setOkresOrbitalny(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.planeta.okres_orbitalny</code>.
     */
    @Size(max = 100)
    @Override
    public String getOkresOrbitalny() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Planeta.PLANETA.NAZWA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Planeta.PLANETA.UKLAD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Planeta.PLANETA.MASA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Planeta.PLANETA.OKRES_ORBITALNY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getNazwa();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUklad();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getMasa();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getOkresOrbitalny();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlanetaRecord value1(String value) {
        setNazwa(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlanetaRecord value2(String value) {
        setUklad(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlanetaRecord value3(String value) {
        setMasa(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlanetaRecord value4(String value) {
        setOkresOrbitalny(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlanetaRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IPlaneta from) {
        setNazwa(from.getNazwa());
        setUklad(from.getUklad());
        setMasa(from.getMasa());
        setOkresOrbitalny(from.getOkresOrbitalny());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IPlaneta> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlanetaRecord
     */
    public PlanetaRecord() {
        super(Planeta.PLANETA);
    }

    /**
     * Create a detached, initialised PlanetaRecord
     */
    public PlanetaRecord(String nazwa, String uklad, String masa, String okresOrbitalny) {
        super(Planeta.PLANETA);

        set(0, nazwa);
        set(1, uklad);
        set(2, masa);
        set(3, okresOrbitalny);
    }
}
